import{_ as a,o as i,c as e,a as l}from"./app-b5630a42.js";const r={},p=l('<h1 id="javascript类型" tabindex="-1"><a class="header-anchor" href="#javascript类型" aria-hidden="true">#</a> JavaScript类型</h1><p>👩🏻‍💻十三月   🕰️ 2023-08-16</p><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>JavaScript的类型系统包含了7种基本类型和7种语言类型。</p><h2 id="_1-基本类型" tabindex="-1"><a class="header-anchor" href="#_1-基本类型" aria-hidden="true">#</a> 1. 基本类型</h2><ul><li><p>Undefined: 表示未定义的值。 注：有些编程规范要求用viod 0 代替 undefined</p></li><li><p>Null: 表示空值</p></li><li><p>Boolean: 表示布尔值，true或者false</p></li><li><p>Number: 表示数字，包含整数和浮点数</p></li><li><p>String: 表示字符串。由字符组成的序列</p></li><li><p>Symbol: 表示唯一的、不可变的值，用于创建对象的唯一属性键</p></li><li><p>BigInt: 表示任意精度的整数</p></li></ul><h2 id="_2-语言类型" tabindex="-1"><a class="header-anchor" href="#_2-语言类型" aria-hidden="true">#</a> 2. 语言类型</h2><ul><li><p>Object: 表示复杂数据结构，可以包含属性和方法</p></li><li><p>Function: 表示可执行的代码块，可以被调用</p></li><li><p>Array: 表示有序的集合，可以包含任意类型的值</p></li><li><p>Date: 表示日期和时间</p></li><li><p>RegExp: 表示正则表达式，用于模式匹配和替换</p></li><li><p>Error: 表示错误对象，用于捕获和处理异常</p></li><li><p>Map和Set: 表示集合和映射的数据结构</p></li></ul><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h2><p>JavaScript是一种动态类型语言，变量的类型是在运行时确定的，而不是在编译时。这意味着同一个变量可以在不同的上下文中保存不同类型的值</p>',10),t=[p];function d(n,h){return i(),e("div",null,t)}const s=a(r,[["render",d],["__file","jsType.html.vue"]]);export{s as default};
