import{_ as e,o as a,c as i,a as t}from"./app-b5630a42.js";const r={},c=t('<h1 id="javascript词法" tabindex="-1"><a class="header-anchor" href="#javascript词法" aria-hidden="true">#</a> JavaScript词法</h1><p>👩🏻‍💻十三月   🕰️ 2023-08-29</p><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h2><p>词法规定了语言的最小语义单元：token，可以翻译为<code>标记</code>或者<code>词</code>。</p><p>从字符到词的整个过程是没有结构的，只要符合词的规则，就构成词。一般来说，词法设计不会包含冲突，词法分析技术上可以使用状态机或者正则表达式来进行。</p><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h2><p>JavaScript的词法定义，从源代码的输入可以这样分类：</p><ul><li>WhiteSpace 空白字符</li><li>LineTerminator 换行符</li><li>Comment 注释</li><li>Token 词 <ul><li>IdentifierName 标识符名称，典型案例是我们使用的变量名，关键字也包含在内</li><li>Punctuator 符号，我们使用的运算符和大括号等符号</li><li>StringLiteral 字符串直接量，就是我们用单引号或者双引号引起来的直接量</li><li>Template 字符串模板，用反引号括起来的直接量</li></ul></li></ul><h2 id="备注" tabindex="-1"><a class="header-anchor" href="#备注" aria-hidden="true">#</a> 备注</h2><p>参考文章：https://time.geekbang.org/column/article/86400</p><p>关于编译原理这篇文章，需要多多理解：https://time.geekbang.org/column/article/86823</p>',11),l=[c];function n(o,d){return a(),i("div",null,l)}const s=e(r,[["render",n],["__file","token.html.vue"]]);export{s as default};
