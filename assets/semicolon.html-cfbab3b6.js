import{_ as e,o as a,c as i,a as r}from"./app-b5630a42.js";const t="/yjj-blog/assets/semicolon-204701e1.jpg",n={},l=r('<h1 id="javascript自动插入分号规则" tabindex="-1"><a class="header-anchor" href="#javascript自动插入分号规则" aria-hidden="true">#</a> JavaScript自动插入分号规则</h1><p>👩🏻‍💻十三月   🕰️ 2023-08-29</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>JavaScript语言提供了分号自动补全的规则，了解这些规则，有助于排查问题。</p><h2 id="自动插入分号规则" tabindex="-1"><a class="header-anchor" href="#自动插入分号规则" aria-hidden="true">#</a> 自动插入分号规则</h2><p>自动插入分号规则独立于所有的语法产生式定义，有以下三条规则：</p><ul><li>要有换行符，且下一个符号是不符合语法的，那么尝试插入分号</li><li>有换行符，且语法中规定此处不能有换行符，那么自动插入分号</li><li>源代码结束处，不能形成完整的脚本或者模块结构，那么自动插入分号</li></ul><h2 id="no-lineterminator-here-规则" tabindex="-1"><a class="header-anchor" href="#no-lineterminator-here-规则" aria-hidden="true">#</a> no LineTerminator here 规则</h2><p>no LineTerminator here 规则表示它所在的结构中的这一位置不能插入换行符 <img src="'+t+'" alt="规则"></p><h2 id="不加分号需要注意的情况" tabindex="-1"><a class="header-anchor" href="#不加分号需要注意的情况" aria-hidden="true">#</a> 不加分号需要注意的情况</h2><ul><li>以括号开头的语句</li><li>以数组开头的语句</li><li>以正则表达式开头的语句</li><li>以Template开头的语句</li></ul>',11),h=[l];function o(c,s){return a(),i("div",null,h)}const p=e(n,[["render",o],["__file","semicolon.html.vue"]]);export{p as default};
