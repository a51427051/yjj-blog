import{_ as a,o as s,c as n,a as e}from"./app-b5630a42.js";const o={},r=e(`<h1 id="空值合并运算符" tabindex="-1"><a class="header-anchor" href="#空值合并运算符" aria-hidden="true">#</a> 空值合并运算符 <code>??</code> <code>||</code></h1><p>👩🏻‍💻十三月   🕰️ 2023-01-24</p><h2 id="_1-空值合并操作符" tabindex="-1"><a class="header-anchor" href="#_1-空值合并操作符" aria-hidden="true">#</a> 1. 空值合并操作符 <code>??</code></h2><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><p><code>??</code> 是一个逻辑操作符，<strong>当左边的操作书为<code>null</code>或<code>undefined</code>的时候</strong>，返回其右侧操作符，否则返回左侧。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">undefined</span> <span class="token operator">??</span> <span class="token string">&#39;foo&#39;</span>  <span class="token comment">// &#39;foo&#39;</span>
  <span class="token keyword">null</span> <span class="token operator">??</span> <span class="token string">&#39;foo&#39;</span>  <span class="token comment">// &#39;foo&#39;</span>
  <span class="token string">&#39;foo&#39;</span> <span class="token operator">??</span> <span class="token string">&#39;bar&#39;</span> <span class="token comment">// &#39;foo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-逻辑或操作符" tabindex="-1"><a class="header-anchor" href="#_2-逻辑或操作符" aria-hidden="true">#</a> 2. 逻辑或操作符 <code>||</code></h2><h2 id="定义-1" tabindex="-1"><a class="header-anchor" href="#定义-1" aria-hidden="true">#</a> 定义</h2><p>逻辑或操作符 （<code>||</code>），会在<strong>左侧操作数为假值（左侧操作数会先转换为<code>Boolean</code>，false则为假值）时</strong>返回右侧操作数。</p><h2 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1" aria-hidden="true">#</a> 示例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">1</span>  <span class="token comment">// 1</span>
  <span class="token number">0</span> <span class="token operator">??</span> <span class="token number">1</span>  <span class="token comment">// 0</span>
  
  <span class="token string">&#39;&#39;</span> <span class="token operator">||</span> <span class="token string">&#39;bar&#39;</span>  <span class="token comment">// &#39;bar&#39;</span>
  <span class="token string">&#39;&#39;</span> <span class="token operator">??</span> <span class="token string">&#39;bar&#39;</span>  <span class="token comment">// &#39;&#39;</span>
  
  <span class="token number">NaN</span> <span class="token operator">||</span> <span class="token number">1</span>  <span class="token comment">// 1</span>
  <span class="token number">NaN</span> <span class="token operator">??</span> <span class="token number">1</span>  <span class="token comment">// NaN</span>
  
  <span class="token boolean">false</span> <span class="token operator">||</span> <span class="token string">&#39;bar&#39;</span>  <span class="token comment">// &#39;bar&#39;</span>
  <span class="token boolean">false</span> <span class="token operator">??</span> <span class="token string">&#39;bar&#39;</span>  <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-注意" tabindex="-1"><a class="header-anchor" href="#_3-注意" aria-hidden="true">#</a> 3. 注意</h2><p>不可将<code>??</code>与<code>&amp;&amp;</code> <code>||</code> 一起使用，会报错</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token keyword">undefined</span> <span class="token operator">??</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 抛出 SyntaxError</span>
  <span class="token boolean">true</span> <span class="token operator">||</span> <span class="token keyword">undefined</span> <span class="token operator">??</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 抛出 SyntaxError</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,15),c=[r];function t(p,d){return s(),n("div",null,c)}const i=a(o,[["render",t],["__file","nullOperator.html.vue"]]);export{i as default};
